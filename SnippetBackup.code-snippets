/*
*   Add this path:
*   C:/Users/.../AppData/Roaming/Code/User/snippets/SnippetBackup.code-snippets
*   .code-snippets is a file extension
*/
{
    "PocketService -executeService-Snippet": {
       "scope": "javascript,typescript",
       "prefix": "pocketExecute",
        "body": [
            "PocketService.execute('handler', parameter, (serviceResponse) => {",
            "    console.log(serviceResponse);",
            "});"
        ],
        "description": "Template for PocketService execution"
   },
   "PocketMongo-Insert-Snippet": {
       "scope": "javascript,typescript",
       "prefix": "PocketMongo Mongo Insert Snippet",
       "body": [
           "//IMPORTANT: You must import \n\n// @import PocketMongo from './pocket-core/PocketMongo.js';\n",
           "new PocketMongo().executeInsert(\n\t{\n\t\tfrom:'${1:databaseName}.${2:collectionName}',\n\t\tparams:${3:'Parameter'}\n\t},\n\t(insertResponse)=>\n\t{\n\t\tif(insertResponse)\n\t\t{\n\t\t\t//insertResponse is return true or false\n\t\t\treturn insertResponse;\n\t\t}\n\t}\n)"
       ],
       "description": "Create Pocket Service Template"
   },
   "PocketMongo-Get-Snippet": {
       "scope": "javascript,typescript",
       "prefix": "PocketMongo Mongo Get Snippet",
       "body": [
           "//IMPORTANT: You must import \n\n// @import PocketMongo from './pocket-core/PocketMongo.js';\n",
           "new PocketMongo().executeGet(\n\t{\n\t\tfrom:'${1:databaseName}.${2:collectionName}',\n\t\tfilter:${3:'FilterCriteria'}\n\t},\n\t(insertResponse)=>\n\t{\n\t\tif(insertResponse)\n\t\t{\n\t\t\t//insertResponse is return true or false\n\t\t\treturn insertResponse;\n\t\t}\n\t}\n)"
       ],
       "description": "Create Pocket Service Template"
   },
   "PocketService -NEWSCRIPT-Snippet": {
    "prefix": "pocketServiceProcess",
    "body": [
        "import Pocket from '../pocket-core/Pocket.js';",
        "import PocketMongo from '../pocket-core/PocketMongo.js';",
        "import PocketUtility from '../pocket-core/PocketUtility.js';",
        "import PocketService from '../pocket-core/PocketService.js';",
        "import {ServiceParameter} from '../util/constant.js';",
        "",
        "process.on('message', (inParameter)=>{",
        "",
        "    PocketService.parameter(inParameter,ServiceParameter['MUST | FILL']);",
        "",
        "    process.send(returnParameter);",
        "    process.exit();",
        "    process.kill();",
        "});"
    ],
    "description": "Template for PocketService process handling"
}
}